#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞–Ω–µ–ª–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –≤ —á–∞—Ç–µ
"""

import requests
import json
import time

API_BASE = "http://localhost:8000"

def test_chat_with_sources():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —á–∞—Ç —Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏"""
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –Ω–∞–π—Ç–∏ —Å—Ç–∞—Ç—å–∏ –≤ –ë–î
    test_queries = [
        "–ù–µ –º–æ–≥—É –≤—Å—Ç–∞–≤–∏—Ç—å —Å—Ç—Ä–æ–∫—É –≤ Excel",
        "–û—à–∏–±–∫–∞ PICT_USER", 
        "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –Ω–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–∏ –≤ –ú–¢",
        "–í—ã–≥—Ä—É–∑–∫–∞ –≤ –î–∏–∞–¥–æ–∫ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç",
        "–ö–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–∏–∫—Å –≤ –ú–¢",
        "AutoCAD –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–∏–∞–ª–æ–≥–∏",
        "–°–ë–ü –Ω–∞—Å—Ç—Ä–æ–π–∫–∞",
        "–û—à–∏–±–∫–∞ 0x80040610"
    ]
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤...")
    print("=" * 50)
    
    for i, query in enumerate(test_queries, 1):
        print(f"\nüìù –¢–µ—Å—Ç {i}: {query}")
        
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ —á–∞—Ç
            response = requests.post(
                f"{API_BASE}/api/chat/message",
                json={
                    "message": query,
                    "user_id": "test-user"
                },
                headers={"Content-Type": "application/json"}
            )
            
            if response.status_code == 200:
                data = response.json()
                print(f"‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω: {len(data.get('response', ''))} —Å–∏–º–≤–æ–ª–æ–≤")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
                related_articles = data.get('related_articles', [])
                print(f"üìö –ù–∞–π–¥–µ–Ω–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {len(related_articles)}")
                
                if related_articles:
                    print("   –ò—Å—Ç–æ—á–Ω–∏–∫–∏:")
                    for j, article in enumerate(related_articles[:3], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                        title = article.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')[:50]
                        url = article.get('url', '–ë–µ–∑ URL')
                        print(f"   {j}. {title}... ({url})")
                else:
                    print("   ‚ö†Ô∏è –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                    
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {response.text}")
                
        except Exception as e:
            print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        
        time.sleep(1)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    
    print("\n" + "=" * 50)
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

def test_admin_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã"""
    
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω—Å–∫–∏—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤...")
    print("=" * 50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—å–∏
        response = requests.get(f"{API_BASE}/api/admin/articles?skip=0&limit=10")
        if response.status_code == 200:
            data = response.json()
            articles = data.get('articles', [])
            print(f"üìÑ –ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ç–µ–π –≤ –ë–î: {len(articles)}")
            
            if articles:
                print("   –ü—Ä–∏–º–µ—Ä—ã —Å—Ç–∞—Ç–µ–π:")
                for article in articles[:3]:
                    title = article.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')[:50]
                    tags = [tag.get('name', '') for tag in article.get('tags', [])]
                    categories = [cat.get('name', '') for cat in article.get('categories', [])]
                    print(f"   - {title}... (—Ç–µ–≥–∏: {', '.join(tags)}, –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {', '.join(categories)})")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–µ–π: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∞–¥–º–∏–Ω–∫–∏: {e}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ø–∞–Ω–µ–ª–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ backend –∑–∞–ø—É—â–µ–Ω –Ω–∞ localhost:8000")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ frontend –∑–∞–ø—É—â–µ–Ω –Ω–∞ localhost:3000")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
    try:
        response = requests.get(f"{API_BASE}/docs", timeout=5)
        print("‚úÖ Backend –¥–æ—Å—Ç—É–ø–µ–Ω")
    except:
        print("‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ: cd backend && python -m uvicorn main:app --host 127.0.0.1 --port 8000 --reload")
        exit(1)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    test_admin_endpoints()
    test_chat_with_sources()
    
    print("\nüåê –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000 –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    print("üìù –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–∑ —Ç–µ—Å—Ç–æ–≤ –≤—ã—à–µ")
    print("üëÜ –ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –º–∏–Ω–∏-–±–∞—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–∞–Ω–µ–ª–∏")

